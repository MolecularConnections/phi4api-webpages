<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="
                        http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/mvc
        				http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	

	<context:annotation-config />
	
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
	<mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
	<mvc:resources mapping="/images/**" location="/images/" ></mvc:resources>
	<mvc:resources mapping="/img/**" location="/img/" ></mvc:resources>
	<mvc:annotation-driven />
	
	<context:component-scan base-package="com.molcon.phibase" />
	
	<!-- <import resource="applicationSecurity.xml" /> -->

	<!-- the application context definition for the spring app DispatcherServlet -->
	<!-- org.springframework.http.converter.json.MappingJackson2HttpMessageConverter -->
	<!-- <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" p:synchronizeOnSession="true">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter"/>
			</list>
		</property>
	</bean> -->

	<!-- Enable annotation-based validation using Bean Validation Framework -->
	<!-- <bean id="configurationLoader"
        class="org.springmodules.validation.bean.conf.loader.annotation.AnnotationBeanValidationConfigurationLoader"/>

    <bean id="validator" class="org.springmodules.validation.bean.BeanValidator"
        p:configurationLoader-ref="configurationLoader"/> -->

	<!-- Load messages -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" >
		<property name="basename" value="/resources/messages"/>
	</bean>

	<bean id="tilesConfigurer"
		  class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>

	<bean id="viewResolver"
		  class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>

	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

	
	<bean id="propertyConfigurer"
	        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
	        p:location="/WEB-INF/classes/jdbc.properties" />
	
	<bean id="dataSource"
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<property name="url" value="${jdbc.databaseurl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<bean id="gson" class="com.google.gson.Gson" />

</beans>
